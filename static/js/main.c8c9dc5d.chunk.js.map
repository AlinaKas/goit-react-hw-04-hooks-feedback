{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","defaultProps","FeedbackOptions","options","onLeaveFeedback","map","option","name","type","onClick","toUpperCase","slice","Statistics","good","neutral","bad","total","positivePercentage","list","item","positive","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","target","state","Math","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,KAAO,gDAAgD,SAAW,oDAAoD,QAAU,mDAAmD,IAAM,iD,kBCA3QD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,IAAM,6BAA6B,KAAO,yDAAyD,IAAM,wDAAwD,QAAU,8D,gBCA7LD,EAAOC,QAAU,CAAC,QAAU,gC,+JCG5B,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,KAKPF,EAAQM,aAAe,CACrBL,MAAO,SAQMD,Q,gBCKAO,MAvBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACER,UAAS,UAAKC,IAAEO,IAEhBC,KAAMD,EACNE,KAAK,SACLC,QAASL,EALX,SAOGE,EAAO,GAAGI,cAAgBJ,EAAOK,MAAM,IALnCL,S,gBCNf,SAASM,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,mCACE,qBAAInB,UAAWC,IAAEmB,KAAjB,UACE,qBAAIpB,UAAWC,IAAEc,KAAjB,mBAA8BA,KAC9B,qBAAIf,UAAWC,IAAEe,QAAjB,sBAAoCA,KACpC,qBAAIhB,UAAWC,IAAEgB,IAAjB,kBAA4BA,KAC5B,qBAAIjB,UAAWC,IAAEoB,KAAjB,oBAA+BH,KAC/B,qBAAIlB,UAAWC,IAAEqB,SAAjB,gCAA+CH,EAA/C,YAMRL,EAAWX,aAAe,CACxBgB,mBAAoB,EACpBD,MAAO,GAWMJ,Q,gBCnBAS,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGxB,UAAWC,IAAEuB,QAAhB,SAA0BA,KCyDpBC,MAvDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOX,EAAP,KAAaY,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOV,EAAP,KAAgBY,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOT,EAAP,KAAYY,EAAZ,KAkBMC,EAAqB,WAEzB,OAAOf,EAAOC,EAAUC,GAO1B,OACE,qCACE,cAAC,EAAD,CAASnB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEQ,gBA7BmB,SAAAyB,GACzB,OAAQA,EAAEC,OAAOvB,MACf,IAAK,OACHkB,GAAQ,SAAAM,GAAK,OAAIA,EAAQ,KACzB,MACF,IAAK,UACHL,GAAW,SAAAK,GAAK,OAAIA,EAAQ,KAC5B,MACF,IAAK,MACHJ,GAAO,SAAAI,GAAK,OAAIA,EAAQ,KACxB,MACF,QACE,SAkBE5B,QAAS,CAAC,OAAQ,UAAW,WAGjC,cAAC,EAAD,CAASP,MAAM,aAAf,SACGgC,IACC,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,IACPX,mBAlBDe,KAAKC,MAAc,IAAPpB,EAAce,OAqB3B,cAAC,EAAD,CAAcN,QAAQ,4BClDhCY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c8c9dc5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3oKT7\",\"item\":\"Statistics_item__1vE2T\",\"good\":\"Statistics_good__18zd4 Statistics_item__1vE2T\",\"positive\":\"Statistics_positive__3ESZ5 Statistics_item__1vE2T\",\"neutral\":\"Statistics_neutral__3mDg3 Statistics_item__1vE2T\",\"bad\":\"Statistics_bad__1V8Qu Statistics_item__1vE2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1rp9P\",\"good\":\"FeedbackOptions_good__3_i5p FeedbackOptions_btn__1rp9P\",\"bad\":\"FeedbackOptions_bad__1-ciY FeedbackOptions_btn__1rp9P\",\"neutral\":\"FeedbackOptions_neutral__1m1cA FeedbackOptions_btn__1rp9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.defaultProps = {\n  title: 'hello',\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <>\n      {options.map(option => (\n        <button\n          className={`${s[option]}`}\n          key={option}\n          name={option}\n          type=\"button\"\n          onClick={onLeaveFeedback}\n        >\n          {option[0].toUpperCase() + option.slice(1)}\n        </button>\n      ))}\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport s from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      <ul className={s.list}>\n        <li className={s.good}>Good: {good}</li>\n        <li className={s.neutral}>Neutral: {neutral}</li>\n        <li className={s.bad}>Bad: {bad}</li>\n        <li className={s.item}>Total: {total}</li>\n        <li className={s.positive}>Positive Feedback: {positivePercentage}%</li>\n      </ul>\n    </>\n  );\n}\n\nStatistics.defaultProps = {\n  positivePercentage: 0,\n  total: 0,\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport s from '../Notification/Notification.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <p className={s.message}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import './App.css';\nimport React, { useState } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification.js';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countStateFeedback = e => {\n    switch (e.target.name) {\n      case 'good':\n        setGood(state => state + 1);\n        break;\n      case 'neutral':\n        setNeutral(state => state + 1);\n        break;\n      case 'bad':\n        setBad(state => state + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    // const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.floor((good * 100) / countTotalFeedback());\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          onLeaveFeedback={countStateFeedback}\n          options={['good', 'neutral', 'bad']}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\"></Notification>\n        )}\n      </Section>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}